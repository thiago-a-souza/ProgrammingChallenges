#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>

#define INF 9999999

using namespace std;

int min(int a, int b){
	if(a < b)
	   return a;
	return b;
}

int abs(int a){
	if(a < 0)
	   return -a;
	return a;
}

void construct_candidates(int a[], int k, int n, int c[], int *ncand){
bool legal_move;

	*ncand = 0;
	for(int i=1; i<=n; i++){
		legal_move = true;
		for(int j=1; j<k; j++){
			if(abs(k-j) == abs(i-a[j]))
			   legal_move = false;
		    if(i == a[j])
		       legal_move = false;
		}
		if(legal_move){
		    c[*ncand] = i;
		    *ncand = *ncand + 1;
		}
	}
}

void backtrack(int a[], int k, int n){
int c[10], ncand;

	if(k == n){
	   printf("{");
	   for(int i=1; i<=k; i++){
	      if(i == 1)
	         printf("%d",a[i]);
	      else 
	         printf(",%d",a[i]);
	   }
	   printf("},\n");
	} else {
		k++;
		construct_candidates(a, k, n, c, &ncand);
		for(int i=0; i<ncand; i++){
			a[k] = c[i];
			backtrack(a,k,n);
			   
		}
	}
}


main(){
int a[10];
//backtrack(a,0,8);
int solutions[92][8] = {
{1,5,8,6,3,7,2,4},{1,6,8,3,7,4,2,5},{1,7,4,6,8,2,5,3},{1,7,5,8,2,4,6,3},
{2,4,6,8,3,1,7,5},{2,5,7,1,3,8,6,4},{2,5,7,4,1,8,6,3},{2,6,1,7,4,8,3,5},
{2,6,8,3,1,4,7,5},{2,7,3,6,8,5,1,4},{2,7,5,8,1,4,6,3},{2,8,6,1,3,5,7,4},
{3,1,7,5,8,2,4,6},{3,5,2,8,1,7,4,6},{3,5,2,8,6,4,7,1},{3,5,7,1,4,2,8,6},
{3,5,8,4,1,7,2,6},{3,6,2,5,8,1,7,4},{3,6,2,7,1,4,8,5},{3,6,2,7,5,1,8,4},
{3,6,4,1,8,5,7,2},{3,6,4,2,8,5,7,1},{3,6,8,1,4,7,5,2},{3,6,8,1,5,7,2,4},
{3,6,8,2,4,1,7,5},{3,7,2,8,5,1,4,6},{3,7,2,8,6,4,1,5},{3,8,4,7,1,6,2,5},
{4,1,5,8,2,7,3,6},{4,1,5,8,6,3,7,2},{4,2,5,8,6,1,3,7},{4,2,7,3,6,8,1,5},
{4,2,7,3,6,8,5,1},{4,2,7,5,1,8,6,3},{4,2,8,5,7,1,3,6},{4,2,8,6,1,3,5,7},
{4,6,1,5,2,8,3,7},{4,6,8,2,7,1,3,5},{4,6,8,3,1,7,5,2},{4,7,1,8,5,2,6,3},
{4,7,3,8,2,5,1,6},{4,7,5,2,6,1,3,8},{4,7,5,3,1,6,8,2},{4,8,1,3,6,2,7,5},
{4,8,1,5,7,2,6,3},{4,8,5,3,1,7,2,6},{5,1,4,6,8,2,7,3},{5,1,8,4,2,7,3,6},
{5,1,8,6,3,7,2,4},{5,2,4,6,8,3,1,7},{5,2,4,7,3,8,6,1},{5,2,6,1,7,4,8,3},
{5,2,8,1,4,7,3,6},{5,3,1,6,8,2,4,7},{5,3,1,7,2,8,6,4},{5,3,8,4,7,1,6,2},
{5,7,1,3,8,6,4,2},{5,7,1,4,2,8,6,3},{5,7,2,4,8,1,3,6},{5,7,2,6,3,1,4,8},
{5,7,2,6,3,1,8,4},{5,7,4,1,3,8,6,2},{5,8,4,1,3,6,2,7},{5,8,4,1,7,2,6,3},
{6,1,5,2,8,3,7,4},{6,2,7,1,3,5,8,4},{6,2,7,1,4,8,5,3},{6,3,1,7,5,8,2,4},
{6,3,1,8,4,2,7,5},{6,3,1,8,5,2,4,7},{6,3,5,7,1,4,2,8},{6,3,5,8,1,4,2,7},
{6,3,7,2,4,8,1,5},{6,3,7,2,8,5,1,4},{6,3,7,4,1,8,2,5},{6,4,1,5,8,2,7,3},
{6,4,2,8,5,7,1,3},{6,4,7,1,3,5,2,8},{6,4,7,1,8,2,5,3},{6,8,2,4,1,7,5,3},
{7,1,3,8,6,4,2,5},{7,2,4,1,8,5,3,6},{7,2,6,3,1,4,8,5},{7,3,1,6,8,5,2,4},
{7,3,8,2,5,1,6,4},{7,4,2,5,8,1,3,6},{7,4,2,8,6,1,3,5},{7,5,3,1,6,8,2,4},
{8,2,4,1,7,5,3,6},{8,2,5,3,1,7,4,6},{8,3,1,6,2,5,7,4},{8,4,1,3,6,2,7,5},
};
int ans, aux;
int line = 1;
	
	
	while(scanf("%d %d %d %d %d %d %d %d",&a[0],&a[1],&a[2],&a[3],&a[4],&a[5],&a[6],&a[7]) != EOF){
		ans = INF;
		for(int i=0; i<92; i++){
		    aux = 0;
		    for(int j=0; j<8; j++)
		       if(solutions[i][j] != a[j])
		          aux++;
		    ans = min(ans, aux);
		    if(ans == 0)
		      break;
		}
		printf("Case %d: %d\n",line++,ans);
		
	}


}

